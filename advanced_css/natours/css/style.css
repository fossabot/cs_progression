*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
    /* rem的基础值 */
    font-size: 62.5%;
}

body {
  /* Font的顺序是，从第一个开始，没有就下一个 */
  font-family: "Lato", sans-serif;
  font-weight: 400;
  line-height: : 1.7;
  color: #777;
  /* 这个padding让四周有30px!!!! */
  padding: 3rem;
  /* border-box可以无视boxmodel里面的Padding长度，当设置宽度为900px，得到的也是900px，Padding不会介入 */
  box-sizing: border-box;
}

.header {
  /* 95% of the viewport height 也就是页面高度的95% */
  height: 95vh;
  /* 颜色转变gradient, 0.8是Transparency */
  background-image: linear-gradient( to right bottom, rgba(126, 213, 111, .8), rgba(40, 180, 131, .8)), url(../img/hero.jpg);
  /* Fit element in the box */
  background-size: cover;
  background-position: top;
  position: relative;
  /* 让页面切掉右下角， polygon定义四周的点 Clockwise */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.header__logo-box {
  /* Using Absolute Positioning */
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  /* relative to the parent position */
  top: 40%;
  left: 50%;
  /* 这里translate会把整体往parent的50%起始点，往左边移动50%自身box的长度
    已达到到达中间的位置 */
  transform: translate(-50%, -50%);
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  /* transform有时候会把背面转出来，这个可以用来隐藏它 */
  backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  /* 因为span element本身定义的是inline，这里我们需要字体为上下，所以要用block */
  display: block;
  margin-bottom: 1rem;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  /* Animation */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.74rem;
  /* Animation */
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }
  80% {
    transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }
  80% {
    transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link, .btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  transition: all .2s;
  font-size: 1.6rem;
  position: relative;


}

.btn:hover {
  transform: translateY(-.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

.btn:active {
  transform: translateY(-.1rem);
  box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

/* psudo-element */
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: #fff;
}

.btn:hover::after {
    transform: scale(1.1) scaleY(1.4);
    /* fadeout */
    opacity: 0;
}

.btn--animated {
  /* Animation */
  animation-name: moveInBottom;
  animation-duration: 0.5s;
  animation-timing-function: ease-out;
  animation-delay: .75s;
  /* Auto Applied Opacity of 0 */
  animation-fill-mode: backwards;
}
