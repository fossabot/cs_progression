@import "abstracts/functions";
@import "abstracts/mixins";
@import "abstracts/variables";

@import "base/animations";
@import "base/base";
@import "base/typography";
@import "base/utilities";

@import "pages/home";



*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}


html {
    /* font-size: ·rem· 的基础值 */
    font-size: 62.5%;
}

body {
/***
    font-family: 顺序是，从第一个开始，没有就下一个
    padding: 让四周有30px
    box-sizing: border-box: 可以无视boxmodel里面的Padding长度，当设置宽度为900px，得到的也是900px，Padding不会介入
***/
    font-family: "Lato", sans-serif;
    font-weight: 400;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem;
    box-sizing: border-box;
}

.header {
/***
    height: 95% of the viewport height 也就是页面高度的95%
    background-image: 颜色转变gradient, 0.8是Transparency
    clip-path: 让页面切掉右下角， polygon定义四周的点 Clockwise
***/
    height: 95vh;
    background-image: linear-gradient(to right bottom,rgba($color-primary-light, .8),rgba($color-primary-dark, .8)), url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 3.5rem;
  }

  &__text-box {
    /***
        position:  relative to the parent position
        transform: translate(): 会把整体往parent的50%起始点，往左边移动50%自身box的长度
        已达到到达中间的位置
    ***/
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }
}

.heading-primary {
  /* backface-visibility: transform有时候会把背面转出来，这个可以用来隐藏它 */
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 6rem;

  &--main{
  /* display:block: 因为span element本身定义的是inline，这里我们需要字体为上下，所以要用block */
    display: block;
    margin-bottom: 1rem;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;
    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  }

  &--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation-name: moveInRight;
    animation-duration: 1s;
    animation-timing-function: ease-out;
  }
}



.btn {
  &:link, &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    transition: all .2s;
    font-size: 1.6rem;
    position: relative;
  }

  &:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    &::after {
      /* opcaity:fadeout */
        transform: scale(1.1) scaleY(1.4);
        opacity: 0;
    }
  }

  &:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;

    &::after {
        background-color: $color-white;
    }

  }

  &::after {
      content: "";
      display: inline-block;
      height: 100%;
      width: 100%;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      transition: all .4s;
  }

  &--animated {
    /* animation-fill-mode: Auto Applied Opacity of 0 */
    animation-name: moveInBottom;
    animation-duration: 0.5s;
    animation-timing-function: ease-out;
    animation-delay: .75s;
    animation-fill-mode: backwards;
  }
}
